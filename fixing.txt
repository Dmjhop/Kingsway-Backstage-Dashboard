services.v2.events.plan.live.updated


This API call works for grabbing all positions for a particular plan and what roles the person is scheduled to do that sunday
https://api.planningcenteronline.com/services/v2/service_types/1536328/plans/75144412/team_members


One of the attributes is NOTES which is a string

So when an APi call is made, once the data comes back if the notes say v1,v2,v3,v4,v5 that will associate the state of the dashboard and pull the first name/last initial(both through JS string manipulation)/photo_thumbnail attribute and display that beside the name

Notes will go as followed (Notes only need to be used for the band)
v1 = Vox 1
v2 = Vox 2
v3 = Vox 3
v4 = Vox 4
v5 = Vox 5
v6 = Vox 6

iem1 = IEM 1
iem2 = IEM 2
iem3 = IEM 3
iem4 = IEM 4
iem5 = IEM 5
iem6 = IEM 6
wired = wired

switchmd = Switch MD
wiredMD = Wired MD

inst1 = Instrument Pack 1

Production Team roles will be associated with the attribute team_position_name

https://api.planningcenteronline.com/services/v2/service_types/1536328/plans/75144412/team_members?include=team&where[team_id]=6206998
^^^^^^^^^^^^^^^
This will call for the plan and only return the team members by the specific team they happen to be included in whether that's production or worship

Need to Limit the Roles to:
Tech Director
Video Director
FOH Sound
Lights
ProPresenter
Broadcast Sound


Next Questions:
1. How do I advance the plan dynamically?

2. How do I make a stage map that makes sense? (look up drag and drop js frameworks)

3. How will I be able to find the the servicetype correct id and the team id?
    ANSWER: The API explorer will provide the particular service type and team id when I gain developer access to PCO

Remember to set the right service id to get the notes needed!!!




const myHeaders = new Headers();
myHeaders.append("Cache-Control", "");
myHeaders.append("Authorization", "Basic OWY3YzNhNzhjZGUwN2EyN2Y2MTJiNTZhY2Y2ODZhYzk1OTYzYmVhMDEyN2E3NGRiZDNmMDYwYjcxYjYzMzFiNzplMWMxYzEyN2Y1MzZmYWIwZmNlMWNhZGJjNTA4ZmMyYzZhMmFjYTEwNzUwNDYxNWJhMzA2ZDU5ZDY2NmIzZmNi");

const requestOptions = {
  method: "GET",
  headers: myHeaders,
  redirect: "follow"
};

try {
  const response = await fetch("https://api.planningcenteronline.com/services/v2/service_types/1536328/plans/75144412/team_members?include=team&where[team_id]=6206998", requestOptions);
  const result = await response.text();
  console.log(result)
} catch (error) {
  console.error(error);
};



New Goals with this app:
1. Figure out Oauth so that other users can use this
2. Figure out how to make the tables work for any team and how to exclude roles/positions 
3. Figure out how different service types can function using this app
4. Create a preview page so that its not annoying trying to verify each part of the dashboard is correct
5. Create a mobile page so that people on mobile can easily see it
6. Make this a PWA ^^^
7. 




Finding a list of service types can be found using this call:
https://api.planningcenteronline.com/services/v2/service_types

Could probably populate that list with the data[i].attributes.name using a for loop to list all service types

Once they click on that service type, they can assign a team to each part of the dashboard

Finding a list of team types can be found using this call:
https://api.planningcenteronline.com/services/v2/service_types/[SELECTED SERVICE TYPE ID]/teams

Could probably populate that team list with the data[i].attributes.name using a for loop to list all teams

For example: Table 1 what team do you want there? And any roles you do not want there?

Once all of that is configured, it changes the values of states in the dashboard views and then places them in the dashboard for viewing